{"ast":null,"code":"var _jsxFileName = \"/Users/yugpokharel/nepnutri/NepNutri/frontend/src/pages/registration/GoalSelection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoalSelectionPage = () => {\n  _s();\n  var _location$state;\n  const [selectedGoal, setSelectedGoal] = useState(\"\");\n  const location = useLocation();\n  const navigate = useNavigate();\n  const firstName = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.firstName;\n  const handleGoalSelect = goal => {\n    setSelectedGoal(goal);\n  };\n  const handleNext = async () => {\n    if (!selectedGoal) {\n      alert(\"Please select a goal\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5001/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          firstname: firstName,\n          // Passing the firstname from the previous page\n          goal: selectedGoal // Sending the selected goal\n        })\n      });\n      if (response.ok) {\n        navigate(\"/nextPage\"); // Redirect to the next page upon success\n      } else {\n        alert(\"Failed to create user\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Thanks, \", firstName, \"! Now pick your Goal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Lose Weight\", \"Gain Weight\", \"Gain Muscle\", \"Maintain Weight\"].map(goal => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGoalSelect(goal),\n        style: {\n          backgroundColor: selectedGoal === goal ? \"green\" : \"gray\"\n        },\n        children: goal\n      }, goal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GoalSelectionPage, \"1+mMVe6lzX5kB1xyFQ6HGr0UMKo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GoalSelectionPage;\nexport default GoalSelectionPage;\nvar _c;\n$RefreshReg$(_c, \"GoalSelectionPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","GoalSelectionPage","_s","_location$state","selectedGoal","setSelectedGoal","location","navigate","firstName","state","handleGoalSelect","goal","handleNext","alert","response","fetch","method","headers","body","JSON","stringify","firstname","ok","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/yugpokharel/nepnutri/NepNutri/frontend/src/pages/registration/GoalSelection.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst GoalSelectionPage = () => {\n  const [selectedGoal, setSelectedGoal] = useState(\"\");\n  const location = useLocation();\n  const navigate = useNavigate();\n  const firstName = location.state?.firstName;\n\n  const handleGoalSelect = (goal) => {\n    setSelectedGoal(goal);\n  };\n\n  const handleNext = async () => {\n    if (!selectedGoal) {\n      alert(\"Please select a goal\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:5001/users/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          firstname: firstName, // Passing the firstname from the previous page\n          goal: selectedGoal,    // Sending the selected goal\n        }),\n      });\n\n      if (response.ok) {\n        navigate(\"/nextPage\"); // Redirect to the next page upon success\n      } else {\n        alert(\"Failed to create user\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Thanks, {firstName}! Now pick your Goal</h2>\n      <div>\n        {[\"Lose Weight\", \"Gain Weight\", \"Gain Muscle\", \"Maintain Weight\"].map((goal) => (\n          <button\n            key={goal}\n            onClick={() => handleGoalSelect(goal)}\n            style={{\n              backgroundColor: selectedGoal === goal ? \"green\" : \"gray\",\n            }}\n          >\n            {goal}\n          </button>\n        ))}\n      </div>\n      <button onClick={handleNext}>Next</button>\n    </div>\n  );\n};\n\nexport default GoalSelectionPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,SAAS,IAAAL,eAAA,GAAGG,QAAQ,CAACG,KAAK,cAAAN,eAAA,uBAAdA,eAAA,CAAgBK,SAAS;EAE3C,MAAME,gBAAgB,GAAIC,IAAI,IAAK;IACjCN,eAAe,CAACM,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,YAAY,EAAE;MACjBS,KAAK,CAAC,sBAAsB,CAAC;MAC7B;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAEb,SAAS;UAAE;UACtBG,IAAI,EAAEP,YAAY,CAAK;QACzB,CAAC;MACH,CAAC,CAAC;MAEF,IAAIU,QAAQ,CAACQ,EAAE,EAAE;QACff,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACLM,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BV,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEb,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,GAAI,UAAQ,EAACjB,SAAS,EAAC,sBAAoB;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChD7B,OAAA;MAAAyB,QAAA,EACG,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAACK,GAAG,CAAEnB,IAAI,iBACzEX,OAAA;QAEE+B,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACC,IAAI,CAAE;QACtCqB,KAAK,EAAE;UACLC,eAAe,EAAE7B,YAAY,KAAKO,IAAI,GAAG,OAAO,GAAG;QACrD,CAAE;QAAAc,QAAA,EAEDd;MAAI,GANAA,IAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOH,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MAAQ+B,OAAO,EAAEnB,UAAW;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAxDID,iBAAiB;EAAA,QAEJH,WAAW,EACXD,WAAW;AAAA;AAAAqC,EAAA,GAHxBjC,iBAAiB;AA0DvB,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}