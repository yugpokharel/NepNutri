{"ast":null,"code":"var _jsxFileName = \"/Users/yugpokharel/nepnutri/NepNutri/frontend/src/pages/dashboard/CircularProgress.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CircularProgress({\n  data,\n  total,\n  showMacros,\n  type\n}) {\n  const radius = 70;\n  const strokeWidth = 10;\n  const normalizedRadius = radius - strokeWidth * 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const calculateOffset = value => {\n    const percentage = value / total;\n    return circumference - circumference * percentage;\n  };\n  const calculateColor = macroType => {\n    switch (macroType) {\n      case \"protein\":\n        return \"#4CAF50\";\n      case \"carbs\":\n        return \"#2196F3\";\n      case \"fats\":\n        return \"#FFC107\";\n      default:\n        return \"#E91E63\";\n    }\n  };\n  const progressColor = type === \"goal\" ? \"#E91E63\" : \"#4CAF50\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circular-progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      height: radius * 2,\n      width: radius * 2,\n      className: \"progress-ring\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: \"#e0e0e0\",\n        fill: \"transparent\",\n        strokeWidth: strokeWidth,\n        r: normalizedRadius,\n        cx: radius,\n        cy: radius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        stroke: progressColor,\n        fill: \"transparent\",\n        strokeWidth: strokeWidth,\n        strokeDasharray: circumference + \" \" + circumference,\n        strokeDashoffset: calculateOffset(data.total),\n        r: normalizedRadius,\n        cx: radius,\n        cy: radius,\n        className: \"progress-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-value\",\n        children: data.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-label\",\n        children: [\"of \", total, \"kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), showMacros && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"macros-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-item\",\n        style: {\n          \"--color\": calculateColor(\"protein\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"macro-value\",\n          children: [data.protein, \"g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"macro-label\",\n          children: \"Protein\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-item\",\n        style: {\n          \"--color\": calculateColor(\"carbs\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"macro-value\",\n          children: [data.carbs, \"g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"macro-label\",\n          children: \"Carbs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-item\",\n        style: {\n          \"--color\": calculateColor(\"fats\")\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"macro-value\",\n          children: [data.fats, \"g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"macro-label\",\n          children: \"Fats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n_c = CircularProgress;\nvar _c;\n$RefreshReg$(_c, \"CircularProgress\");","map":{"version":3,"names":["CircularProgress","data","total","showMacros","type","radius","strokeWidth","normalizedRadius","circumference","Math","PI","calculateOffset","value","percentage","calculateColor","macroType","progressColor","_jsxDEV","className","children","height","width","stroke","fill","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","style","protein","carbs","fats","_c","$RefreshReg$"],"sources":["/Users/yugpokharel/nepnutri/NepNutri/frontend/src/pages/dashboard/CircularProgress.jsx"],"sourcesContent":["export function CircularProgress({ data, total, showMacros, type }) {\n    const radius = 70\n    const strokeWidth = 10\n    const normalizedRadius = radius - strokeWidth * 2\n    const circumference = normalizedRadius * 2 * Math.PI\n  \n    const calculateOffset = (value) => {\n      const percentage = value / total\n      return circumference - circumference * percentage\n    }\n  \n    const calculateColor = (macroType) => {\n      switch (macroType) {\n        case \"protein\":\n          return \"#4CAF50\"\n        case \"carbs\":\n          return \"#2196F3\"\n        case \"fats\":\n          return \"#FFC107\"\n        default:\n          return \"#E91E63\"\n      }\n    }\n  \n    const progressColor = type === \"goal\" ? \"#E91E63\" : \"#4CAF50\"\n  \n    return (\n      <div className=\"circular-progress\">\n        <svg height={radius * 2} width={radius * 2} className=\"progress-ring\">\n          <circle\n            stroke=\"#e0e0e0\"\n            fill=\"transparent\"\n            strokeWidth={strokeWidth}\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n          />\n          <circle\n            stroke={progressColor}\n            fill=\"transparent\"\n            strokeWidth={strokeWidth}\n            strokeDasharray={circumference + \" \" + circumference}\n            strokeDashoffset={calculateOffset(data.total)}\n            r={normalizedRadius}\n            cx={radius}\n            cy={radius}\n            className=\"progress-circle\"\n          />\n        </svg>\n  \n        <div className=\"progress-content\">\n          <span className=\"total-value\">{data.total}</span>\n          <span className=\"total-label\">of {total}kcal</span>\n        </div>\n  \n        {showMacros && (\n          <div className=\"macros-list\">\n            <div className=\"macro-item\" style={{ \"--color\": calculateColor(\"protein\") }}>\n              <span className=\"macro-value\">{data.protein}g</span>\n              <span className=\"macro-label\">Protein</span>\n            </div>\n            <div className=\"macro-item\" style={{ \"--color\": calculateColor(\"carbs\") }}>\n              <span className=\"macro-value\">{data.carbs}g</span>\n              <span className=\"macro-label\">Carbs</span>\n            </div>\n            <div className=\"macro-item\" style={{ \"--color\": calculateColor(\"fats\") }}>\n              <span className=\"macro-value\">{data.fats}g</span>\n              <span className=\"macro-label\">Fats</span>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}